# Proprietes de l'application
spring:
  application:
      name: utilisateursservice
  cloud:
    # Activation remontée management dans Eureka
    config:
      service-registry:
        auto-registration:
          register-management: on
  datasource:
    url: jdbc:mysql://localhost:3307/utilisateurs
    username: user
    password: pass
  jpa:                                                      # Configuration JPA
    database-platform: org.hibernate.dialect.MySQL5Dialect  # On va parler en MySQL
    hibernate:
      # NE PAS LAISSER EN PROD
      ddl-auto: update                                      # strategie create-drop.
  config:
    # SANS DOCKER COMPOSE
    # import: optional:configserver:http://localhost:10003
    # AVEC DOCKER COMPOSE
    import: optional:configserver:http://bnkconfigsrv:10003
  zipkin:
    baseurl: http://localhost:9411/
    sender:
      type: web # les requêtes seront envoyés en HTTP
  sleuth:
    sampler:
      probability: 1.0
logging:
  level:
    org.springframework.web: INFO # Choix du niveau de log affiché
    # Proprietes du serveur d'entreprise
server:
  port: 10002   # HTTP (Tomcat) port
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:10001/eureka/
  instance:
    metadata-map:
      prometheus.scrape: "true"
      prometheus.path: "/actuator/prometheus"
      prometheus.port: "${management.server.port}"
management:
  endpoints:
    web:
      exposure:
        include:
          env,health,
          info,metrics,
          loggers,mappings, prometheus